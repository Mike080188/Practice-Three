package com.example.practicethree.database;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import com.example.practicethree.model.Product;

import java.util.ArrayList;
import java.util.List;


public class ProductDatabaseHelper extends SQLiteOpenHelper {
  private static final String DATABASE_NAME = "products_database2";
  private static final int DATABASE_VERSION = 1;
  private static final String TABLE_PRODUCTS = "products2";
  private static final String KEY_ID = "id";
  private static final String KEY_NAME = "name";
  private static final String KEY_SELLER = "seller";
  private static final String KEY_PRICE = "price";
  private static final String KEY_DESCRIPTION = "description";

  public ProductDatabaseHelper(Context context){
      super(context, DATABASE_NAME, null, DATABASE_VERSION);
  }

  @Override
  public void onCreate(SQLiteDatabase db) {
      db.execSQL(createProductsTable());
  }

  @Override
  public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
      if (oldVersion < 2){
          /** Update the database to version 2.
           *  You may need to create new colums or add new tables to the database.
           */
      }
  }

  /** Query to Create the Database*/
  private String createProductsTable(){
      String QUERY_CREATE_PRODUCTS_TABLE = "CREATE TABLE " + TABLE_PRODUCTS + "(" +
              KEY_ID + " INTEGER PRIMARY KEY, "+
              KEY_NAME + " TEXT," +
              KEY_SELLER + " TEXT," +
              KEY_PRICE + " REAL," +
              KEY_DESCRIPTION + " TEXT" +
              ")";
      return QUERY_CREATE_PRODUCTS_TABLE;
  }

  /** Other queries */
  public void addProduct(Product product){
      /** Get a Writable instance of the database */
      SQLiteDatabase database = this.getWritableDatabase();
      /** Create a ContentValues to persist information on the database */
      ContentValues values = new ContentValues();
      /** Populate the object with the values from the Product to be added.
       *  There is no need to include the ID because it is autogenerated by the SQLIte*/
      values.put(KEY_NAME, product.getName());
//      values.put(KEY_CATEGORY, product.getCategory());
      values.put(KEY_SELLER, product.getSeller());
      values.put(KEY_PRICE, product.getPrice());
      values.put(KEY_DESCRIPTION, product.getDescription());
      /** Insert the values on the TABLE_PRODUCTS */
      database.insert(TABLE_PRODUCTS, null, values);
      /** Close the connection with the database */
      database.close();
  }

  public List<Product> getAllProducts(){
      List<Product> productList = new ArrayList<>();
      String selectQuery = "SELECT * FROM "+TABLE_PRODUCTS;
      SQLiteDatabase database = this.getWritableDatabase();
      Cursor cursor = database.rawQuery(selectQuery, null);

      if (cursor.moveToFirst()){
          do {
              Product product = new Product(
                      cursor.getString(1), // NAME
                      cursor.getString(2), // SELLER
                      cursor.getFloat(3), // PRICE
                      cursor.getString(4) // DESCRIPTION
              );
              productList.add(product);
          } while (cursor.moveToNext());
      }

      cursor.close();
      database.close();
      return productList;
  }

  public boolean isDatabaseEmpty() {
        boolean isEmpty = true;
        SQLiteDatabase database = getWritableDatabase();
        Cursor cursor = database.rawQuery("SELECT COUNT(*) FROM " + TABLE_PRODUCTS, null);
        if (cursor != null) {
            cursor.moveToFirst();
            int count = cursor.getInt(0);
            if (count > 0) {
                isEmpty = false;
            }
            cursor.close();
        }
        return isEmpty;
    }

  public void populateProductsDatabase(){

      SQLiteDatabase database = getWritableDatabase();

      ContentValues values = new ContentValues();

      values = new ContentValues();
      values.put(KEY_NAME, "Medium Dog Crate");
      values.put(KEY_SELLER, "Pet Supplies Plus");
      values.put(KEY_PRICE, 49.99);
      values.put(KEY_DESCRIPTION, "A medium sized dog metal crate");
      database.insert(TABLE_PRODUCTS, null, values);

      values = new ContentValues();
      values.put(KEY_NAME, "Large Dog Crate");
      values.put(KEY_SELLER, "Pet Supplies Plus");
      values.put(KEY_PRICE, 69.99);
      values.put(KEY_DESCRIPTION, "A large sized dog metal crate");
      database.insert(TABLE_PRODUCTS, null, values);

      values = new ContentValues();
      values.put(KEY_NAME, "Kibbles 'N Bits Savory Beef and Chicken");
      values.put(KEY_SELLER, "PetSmart");
      values.put(KEY_PRICE, 54.99);
      values.put(KEY_DESCRIPTION, "16 lb. bag of Kibbles 'N Bits Savory Beef and Chicken dog food");
      database.insert(TABLE_PRODUCTS, null, values);

      values = new ContentValues();
      values.put(KEY_NAME, "High Tech Pet Power Pet Motorized Door - Large");
      values.put(KEY_SELLER, "PetSmart");
      values.put(KEY_PRICE, 449.99);
      values.put(KEY_DESCRIPTION, "Patented Power Pet doors open completely under their own power. They feature a translucent door panel made of a new super-strength, bulletproof resin. When your pet approaches, the air-tight panel quickly and quietly powers upward disappearing into the stylish housing.");
      database.insert(TABLE_PRODUCTS, null, values);

      values = new ContentValues();
      values.put(KEY_NAME, "Vet's Best Enzymatic Toothpaste and Toothbrush Dog Dental Care Kit");
      values.put(KEY_SELLER, "PetSmart");
      values.put(KEY_PRICE, 12.99);
      values.put(KEY_DESCRIPTION, "Toothbrush features three bristle heads to make brushing fast and easy, working to clean from all angles.");
      database.insert(TABLE_PRODUCTS, null, values);

      database.close();
  }
}
